# docker-compose.yml

services:
  db:
    image: postgres:15-alpine
    container_name: image_processor_postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5442:5432" # Optional: Expose for local debugging with a DB client
    restart: always

  backend:
    build: ./backend
    ports:
      - "8181:8000"
    volumes:
      - ./backend/app:/code/app:z
      # Note: We'll use the .env file in the root for docker-compose, and the backend
      # will read its environment variables directly from compose.
    depends_on:
      - db
    environment:
      - PYTHONPATH=/code
      - PYTHONUNBUFFERED=1
      # --- Database Connection ---
      - DATABASE_URL=${DATABASE_URL}
      # --- Authentication ---
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      # --- NEW: Add the Admin Credentials Here ---
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_SESSION_SECRET_KEY=${ADMIN_SESSION_SECRET_KEY}      
      # --- GPU Configuration ---
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - PYTORCH_CUDA_ALLOC_CONF=garbage_collection_threshold:0.6,max_split_size_mb:128
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    container_name: image_processor_backend
    restart: always

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: https://api.hyongju.com
        VITE_GOOGLE_CLIENT_ID: ${VITE_GOOGLE_CLIENT_ID_FROM_HOST_ENV}
    ports:
      - "3131:80"
    depends_on:
      - backend
    container_name: image_processor_frontend_vite
    restart: always

volumes:
  postgres_data: